OASISFormat:  0.3
Name:         devmapper
Version:      0.11.0
Synopsis:     Bindings to libdevmapper
License:      LGPL-2.1 with OCaml linking exception
Authors:      various
Copyrights:   (C) 2012 Citrix
BuildTools:   ocamlbuild
Plugins:      DevFiles (0.3), META (0.3)

Library               devmapper
  Pack:               true
  Path:               lib
  Modules:            S, Location, Striped, Target, Linux, Mock
  CSources:           camldm_stubs.c
  ByteOpt:            -warn-error +1..45
  NativeOpt:          -warn-error +1..45
  BuildDepends:       ctypes (>= 0.4.0), ctypes.foreign,
                      rpclib (>= 1.5.0), rpclib.syntax,
                      sexplib, sexplib.syntax,
                      stringext

Executable lib_test
  CompiledObject:     best
  Path:               lib_test
  MainIs:             test.ml
  Build$:             flag(tests)
  Custom:             true
  Install:            false
  ByteOpt:            -warn-error +1..45
  NativeOpt:          -warn-error +1..45
  BuildDepends:       devmapper,
                      cstruct, cstruct.lwt,
                      lwt.unix,
                      oUnit,
                      re.str

Executable parallel_test
  CompiledObject:     best
  Path:               lib_test
  MainIs:             testmock_parallel.ml
  Build$:             flag(tests)
  Custom:             true
  Install:            false
  ByteOpt:            -warn-error +1..45
  NativeOpt:          -warn-error +1..45
  BuildDepends:       devmapper,
                      oUnit,
                      threads

Executable parallel_run
  CompiledObject:     best
  Path:               lib_test
  MainIs:             parallel_run.ml
  Build$:             flag(tests)
  Custom:             true
  Install:            false
  ByteOpt:            -warn-error +1..45
  NativeOpt:          -warn-error +1..45
  BuildDepends:       cmdliner,
                      re.str,
                      threads,
                      unix

Test lib_test
  Run$:               flag(tests)
  Command:            $lib_test -runner sequential
  WorkingDirectory:   lib_test

Test parallel_test
  Run$:               flag(tests)
  Command:            $parallel_run -- $parallel_test
  WorkingDirectory:   lib_test
